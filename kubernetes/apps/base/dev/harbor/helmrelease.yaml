---
# yaml-language-server: $schema=https://kube-schemas.pages.dev/source.toolkit.fluxcd.io/helmrepository_v1beta2.json
apiVersion: source.toolkit.fluxcd.io/v1
kind: HelmRepository
metadata:
  name: harbor
spec:
  interval: 2h
  url: https://helm.goharbor.io
  timeout: 3m
---
# yaml-language-server: $schema=https://kube-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app harbor
spec:
  interval: 30m
  timeout: 15m
  chart:
    spec:
      chart: harbor
      version: 1.18.0
      sourceRef:
        kind: HelmRepository
        name: harbor
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    externalURL: "https://registry.${SECRET_DEV_DOMAIN}"
    existingSecretAdminPassword: *app
    # debug, info, warning, error or fatal
    logLevel: warning
    # If using existingSecretSecretKey, the key must be secretKey
    existingSecretSecretKey: *app

    expose:
      # Set how to expose the service. Set the type as "ingress", "clusterIP", "nodePort" or "loadBalancer"
      # and fill the information in the corresponding section
      type: nothing
      tls:
        enabled: false
        # The source of the tls certificate. Set as "auto", "secret"
        # or "none" and fill the information in the corresponding section
        # 1) auto: generate the tls certificate automatically
        # 2) secret: read the tls certificate from the specified secret.
        # The tls certificate can be generated manually or by cert manager
        # 3) none: configure no tls certificate for the ingress. If the default
        # tls certificate is configured in the ingress controller, choose this option
        certSource: none
      #ingress:
      #  annotations:
      #    ingress.kubernetes.io/ssl-redirect: "true"
      #    ingress.kubernetes.io/proxy-body-size: "0"
      #    nginx.ingress.kubernetes.io/ssl-redirect: "true"
      #    nginx.ingress.kubernetes.io/proxy-body-size: "0"
      #    nginx.ingress.kubernetes.io/custom-http-errors: "418"
      #    nginx.ingress.kubernetes.io/proxy-connect-timeout: "480"
      #    gethomepage.dev/enabled: "true"
      #    gethomepage.dev/name: "Harbor"
      #    gethomepage.dev/icon: "harbor.png"
      #    gethomepage.dev/description: Container Registry
      #    gethomepage.dev/group: "Infrastructure"
      #    gethomepage.dev/href: "https://registry.${SECRET_DEV_DOMAIN}"
      #    gethomepage.dev/pod-selector: "app.kubernetes.io/name=harbor,app.kubernetes.io/component=core"
      #  className: iot-dev-nginx
      #  hosts:
      #    core: registry.${SECRET_DEV_DOMAIN}
    database:
      type: external
      external:
        host: postgres-cluster-rw.database.svc.cluster.local
        port: "5432"
        username: harbor
        existingSecret: *app
        coreDatabase: "harbor"
        # "disable" - No SSL
        # "require" - Always SSL (skip verification)
        # "verify-ca" - Always SSL (verify that the certificate presented by the
        # server was signed by a trusted CA)
        # "verify-full" - Always SSL (verify that the certification presented by the
        # server was signed by a trusted CA and the server host name matches the one
        # in the certificate)
        sslmode: "disable"
    persistence:
      enabled: true
      persistentVolumeClaim:
        registry:
          existingClaim: "harbor-registry"
        jobservice:
          jobLog:
            existingClaim: "harbor-jobservice"
          scanDataExports:
            existingClaim: "harbor-jobservice-scandata"
        redis:
          existingClaim: "harbor-redis"
        trivy:
          existingClaim: "harbor-trivy-v2"

    redis:
      type: internal
      internal:
        image:
          repository: ghcr.io/octohelm/harbor/redis-photon
          tag: v2.13.0
      podAnnotations: {}
    exporter:
      replicas: 1
      revisionHistoryLimit: 3
      image:
        repository: ghcr.io/octohelm/harbor/harbor-exporter
        tag: v2.13.0
    portal:
      image:
        repository: ghcr.io/octohelm/harbor/harbor-portal
        tag: v2.13.0
      revisionHistoryLimit: 3
    core:
      image:
        repository: ghcr.io/octohelm/harbor/harbor-core
        tag: v2.13.0
      revisionHistoryLimit: 3
      podAnnotations:
        secret.reloader.stakater.com/reload: *app
    jobservice:
      image:
        repository: ghcr.io/octohelm/harbor/harbor-jobservice
        tag: v2.13.0
      revisionHistoryLimit: 3
    registry:
      registry:
        image:
          repository: ghcr.io/octohelm/harbor/registry-photon
          tag: v2.14.0
      controller:
        image:
          repository: ghcr.io/octohelm/harbor/harbor-registryctl
          tag: v2.13.0
      upload_purging:
        enabled: true
        # remove files in _upload directories which exist for a period of time, default is one week.
        age: 168h
        # the interval of the purge operations
        interval: 24h
        dryrun: false
      revisionHistoryLimit: 3
    chartmuseum:
      enabled: false
    trivy:
      enabled: true
      image:
        repository: ghcr.io/octohelm/harbor/trivy-adapter-photon
        tag: v2.13.0
    notary:
      enabled: false




