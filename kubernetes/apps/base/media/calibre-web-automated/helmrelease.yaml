---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app calibre-web-automated
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  driftDetection:
    mode: enabled
    ignore:
      - paths: [/spec/replicas]
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      *app :
        containers:
          app:
            image:
              repository: docker.io/crocodilestick/calibre-web-automated
              tag: V3.0.4@sha256:e602e73b6fd50c3ba389b38acb701205976a05b650898f615f93bd7e3537a827
            env:
              TZ: ${CLUSTER_TIMEZONE}
              CACHE_DIR: /cache
              PUID: 1000
              PGID: 1000
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 5
            securityContext:
              allowPrivilegeEscalation: false
              # readOnlyRootFilesystem: true # dumb s6 image
              # capabilities: { drop: ['ALL'] } # dumb s6 image needs to start as root and then it chowns and drops capabilities
            resources:
              requests:
                cpu: 5m
                memory: 128Mi
              limits:
                memory: 512Mi
    # defaultPodOptions: # dumb s6 image
    #   automountServiceAccountToken: false
    #   enableServiceLinks: false
    #   securityContext:
    #     runAsNonRoot: true
    #     runAsUser: 1000
    #     runAsGroup: 1000
    #     fsGroup: 1000
    #     fsGroupChangePolicy: 'OnRootMismatch'

    service:
      app:
        ports:
          http:
            port: 8083

    route:
      app:
        hostnames:
          - calibre.${SECRET_MAIN_DOMAIN_NAME}
        parentRefs:
          - name: main
            namespace: network
            sectionName: https
        rules:
          - backendRefs: [{}]
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/pod-selector: app.kubernetes.io/name=calibre-web-automated
          gethomepage.dev/group: Media
          gethomepage.dev/name: Calibre Web Automated
          gethomepage.dev/icon: calibre-web-automated-book-downloader
          gethomepage.dev/description: Book Library
          #gethomepage.dev/widget.type: calibreweb
          #gethomepage.dev/widget.username: '{{ "{{" }}HOMEPAGE_VAR_CALIBREWEB_USERNAME{{ "}}" }}'
          #gethomepage.dev/widget.password: '{{ "{{" }}HOMEPAGE_VAR_CALIBREWEB_PASSWORD{{ "}}" }}'
          #gethomepage.dev/widget.url: http://calibre-web-automated.media.svc.cluster.local:8083

    persistence:
      data:
        existingClaim: *app
        globalMounts:
          - path: /config
      data-cache:
        existingClaim: calibre-web-automated-cache
        globalMounts:
          - path: /cache
      ingest:
        enabled: true
        type: hostPath
        hostPath: ${SHARED_MEDIA_PATH}/cwa-book-ingest
        globalMounts:
          - path: /cwa-book-ingest
      library:
        enabled: true
        type: hostPath
        hostPath: ${SHARED_MEDIA_PATH}/calibre-library
        globalMounts:
          - path: /calibre-library
