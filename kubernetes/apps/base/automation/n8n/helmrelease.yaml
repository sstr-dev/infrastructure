---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app n8n
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:

    defaultPodOptions:
      #annotations:
      #  setDownloadGateway: "true"
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }
    controllers:
      n8n:
        replicas: ${REPLICAS:=1}
        annotations:
          reloader.stakater.com/auto: "true"
        strategy: RollingUpdate
        containers:
          app:
            image:
              repository: ghcr.io/n8n-io/n8n
              tag: 1.102.1
              pullPolicy: IfNotPresent
            env:
              GENERIC_TIMEZONE: ${CLUSTER_TIMEZONE}
              # Isolating N8N
              N8N_PERSONALIZATION_ENABLED: true
              N8N_VERSION_NOTIFICATIONS_ENABLED: false
              N8N_TEMPLATES_ENABLED: true

              EXECUTIONS_DATA_PRUNE: true
              EXECUTIONS_DATA_MAX_AGE: 7
              EXECUTIONS_DATA_PRUNE_MAX_COUNT: 50000

              N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS: false
              N8N_PROTOCOL: "https"
              N8N_PORT: &port 8080
              N8N_HOST: &hostName "{{ .Release.Name }}.${SECRET_MAIN_DOMAIN_NAME}"
              N8N_LOG_LEVEL: info
              N8N_LOG_OUTPUT: console
              N8N_RUNNERS_ENABLED: "true"
              #WEBHOOK_URL: https://${SECRET_N8NWEBHOOKS_DOMAIN}/
              # Public API
              N8N_PUBLIC_API_DISABLED: true
              N8N_PUBLIC_API_SWAGGERUI_DISABLED: true
              NODE_FUNCTION_ALLOW_BUILTIN: "*"
              N8N_METRICS: true
              #NODE_FUNCTION_ALLOW_EXTERNAL: databricks/sql
            envFrom:
              - secretRef:
                  name: *app
            probes:
              liveness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /healthz
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /healthz/readiness
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
            resources:
              requests:
                cpu: 5m
                memory: 128Mi
              limits:
                memory: 2Gi

    #serviceMonitor:
    #  app:
    #    serviceName: *app
    #    endpoints:
    #      - port: http
    #        scheme: http
    #        path: /metrics
    #        interval: 1m
    #        scrapeTimeout: 10s

    service:
      app:
        controller: *app
        ports:
          http:
            port: *port


    route:
      app:
        hostnames:
          - *hostName
        parentRefs:
          - name: main
            namespace: network
            sectionName: https
        #annotations:
        #  gethomepage.dev/enabled: "true"
        #  gethomepage.dev/description: Flexible AI workflow automation
        #  gethomepage.dev/group: Home
        #  gethomepage.dev/icon: *app
        #  gethomepage.dev/name: *app
        #  gethomepage.dev/weight: "1" # optional
        #  gethomepage.dev/pod-selector: "app.kubernetes.io/name=n8n,app.kubernetes.io/controller=n8n"
        rules:
          - backendRefs:
              - identifier: app
                port: *port

      webhooks:
        hostnames:
          - ${SECRET_N8NWEBHOOKS_DOMAIN}
        parentRefs:
          - name: base
            namespace: network
            sectionName: https
        rules:
          - matches:
              - path:
                  value: /webhook
              - path:
                  value: /webhook-test
            backendRefs:
              - identifier: app
                port: *port
    #ingress:
    #  app:
    #    enabled: true
    #    className: iot-nginx
    #    annotations:
    #      gethomepage.dev/enabled: "true"
    #      gethomepage.dev/description: Flexible AI workflow automation
    #      gethomepage.dev/group: Home
    #      gethomepage.dev/icon: *app
    #      gethomepage.dev/name: *app
    #      gethomepage.dev/weight: "1" # optional
    #      gethomepage.dev/pod-selector: >-
    #        app.kubernetes.io/name in (
    #          n8n
    #        )
    #    hosts:
    #      - host: *hostName
    #        paths:
    #          - path: /
    #            service:
    #              identifier: app
    #              port: http
    #    tls:
    #      - hosts:
    #        - *hostName
    #  webhooks:
    #    enabled: true
    #    className: iot-base-nginx
    #    #annotations:
    #    #  gethomepage.dev/enabled: "true"
    #    #  gethomepage.dev/description: "Lightweight LDAP interface for authentication"
    #    #  gethomepage.dev/group: Infrastructure
    #    #  gethomepage.dev/icon: mdi-account-lock
    #    #  gethomepage.dev/name: lldap
    #    #  gethomepage.dev/pod-selector: >-
    #    #    app.kubernetes.io/name in (
    #    #      it-tools
    #    #    )
    #    hosts:
    #      - host: &host "${SECRET_N8NWEBHOOKS_DOMAIN}"
    #        paths:
    #          - path: /webhook
    #            service:
    #              identifier: app
    #              port: http
    #          - path: /webhook-test
    #            service:
    #              identifier: app
    #              port: http
    #    tls:
    #      - hosts:
    #          - *host

    persistence:
      data:
        existingClaim: n8n
        advancedMounts:
          n8n:
            app:
              - path: /home/node/.n8n

