---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app ocsinventory-job
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      # ocsinventory-job
      # cron: 0 0 * * *
      # ghcr.io/sstr-dev/kubectl:1.33.3@sha256-4ab498f9ad398c572e15ccf479276e0067fcd90832a2dffb77cd634aa29cd0f0
      # cmd: cd /usr/share/ocsinventory-reports/ocsreports/crontab && php cron_all_software.php
      ocsinventory-job:
        type: cronjob
        cronjob:
          schedule: "0 0 * * *"
          concurrencyPolicy: "Replace"
          backoffLimit: 0
          failedJobsHistory: 1
          successfulJobsHistory: 0
        pod:
          restartPolicy: OnFailure
          securityContext:
            runAsUser: 65534
            runAsGroup: 65534
            runAsNonRoot: true
        serviceAccount:
          identifier: ocsinventory-job
        containers:
          app:
            image:
              repository: ghcr.io/sstr-dev/kubectl
              tag: 1.34.0@sha256:d8c66e25383b9fe24f2da2802bf986d9b7448aae531a995965d9e296f55fe294
              pullPolicy: IfNotPresent
            command:
              - /bin/sh
              - -c
              - |
                POD=$(kubectl get pod -l app.kubernetes.io/name=ocsinventory -n self-hosted -o jsonpath="{.items[0].metadata.name}")
                if [ -z "$POD" ]; then
                  echo "[ERROR] No ocsinventory pod found. Exiting."
                  exit 1
                fi
                kubectl exec -n self-hosted $POD -c app -- \
                  sh -c 'cd /usr/share/ocsinventory-reports/ocsreports/crontab && php cron_all_software.php'
                if [ $? -ne 0 ]; then
                  echo "[ERROR] Command execution failed inside the pod."
                  exit 2
                fi
                echo "[SUCCESS] Script executed successfully in $POD."
            resources:
              requests:
                cpu: 10m
                memory: 128Mi
              limits:
                memory: 1Gi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - ALL
    serviceAccount:
      ocsinventory-job: {}
    rbac:
      roles:
        ocsinventory-job:
          type: ClusterRole
          rules:
          - apiGroups: [""]
            resources: ["pods", "pods/exec"]
            verbs: ["get", "list", "create", "delete"]

      bindings:
        ocsinventory-job:
          type: ClusterRoleBinding
          roleRef:
            identifier: ocsinventory-job
          subjects:
            - identifier: ocsinventory-job
