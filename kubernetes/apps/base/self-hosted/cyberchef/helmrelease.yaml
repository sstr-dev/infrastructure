---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json

apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app cyberchef
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  driftDetection:
    mode: enabled
    ignore:
      - paths:
          - /spec/containers/resources/limits
        target:
          kind: Pod
  values:
    controllers:
      cyberchef:
        annotations:
          reloader.stakater.com/auto: "true"
        pod:
          securityContext:
            runAsUser: 1000
            runAsGroup: 100
            fsGroup: 100
            fsGroupChangePolicy: "OnRootMismatch"
        containers:
          app:
            image:
              # https://hub.docker.com/r/mpepping/cyberchef
              repository: docker.io/mpepping/cyberchef
              tag: v10.19.4@sha256:91e04eaaa1ba1eac6b8e410d6f7b340e1ea0450d48ccbb52ec67ce6faa3672c5
            env:
              TZ: ${CLUSTER_TIMEZONE}
            resources:
              requests:
                cpu: 5m
                memory: 32Mi
              limits:
                memory: 256Mi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
    service:
      app:
        controller: *app
        ports:
          http:
            port: &port 8000
    #ingress:
    #  app:
    #    enabled: ${DEFAULTINGRESSEN:=true}
    #    className: ${INGRESSCLASS}
    #    #annotations:
    #    #  gethomepage.dev/name: *app
    #    #  gethomepage.dev/enabled: 'true'
    #    #  gethomepage.dev/group: Home
    #    #  gethomepage.dev/icon: cyberchef.png
    #    #  nginx.org/client-max-body-size: '1024m'
    #    hosts:
    #      - host: &host "{{ .Release.Name }}.${DOMAIN}"
    #        paths:
    #          - path: /
    #            service:
    #              identifier: app
    #              port: *port
    #    tls:
    #      - hosts:
    #          - *host
    #  iot:
    #    enabled: ${IOTINGRESS:=false}
    #    className: iot-nginx
    #    annotations:
    #      gethomepage.dev/name: "CyberChef"
    #      gethomepage.dev/enabled: 'true'
    #      gethomepage.dev/group: Home
    #      gethomepage.dev/icon: cyberchef.png
    #      nginx.org/client-max-body-size: '1024m'
    #      gethomepage.dev/description: "CyberChef Data Transformation"
    #      gethomepage.dev/pod-selector: >-
    #        app.kubernetes.io/name in (
    #          cyberchef
    #        )
    #    hosts:
    #      - host: &host "{{ .Release.Name }}.${SECRET_MAIN_DOMAIN_NAME}"
    #        paths:
    #          - path: /
    #            service:
    #              identifier: app
    #              port: *port
    #    tls:
    #      #- secretName: chart-example-tls
    #      - hosts:
    #        - *host

    route:
      app:
        hostnames: ["{{ .Release.Name }}.${SECRET_MAIN_DOMAIN_NAME}"]
        parentRefs:
          - name: main
            namespace: network
            sectionName: https
        rules:
          - backendRefs:
              - name: *app
                port: *port
        #annotations:
        #  gethomepage.dev/name: "CyberChef"
        #  gethomepage.dev/enabled: 'true'
        #  gethomepage.dev/group: Home
        #  gethomepage.dev/icon: cyberchef.png
        #  gethomepage.dev/description: "CyberChef Data Transformation"
    persistence:
      tmp:
        type: emptyDir
