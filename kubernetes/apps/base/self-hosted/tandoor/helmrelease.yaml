---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app tandoor
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      *app :
        replicas: ${REPLICAS:=1}
        annotations:
          reloader.stakater.com/auto: "true"
        strategy: RollingUpdate
        containers:
          app:
            image:
              repository: ghcr.io/tandoorrecipes/recipes
              tag: 2.0.3
            env:
              TZ: ${CLUSTER_TIMEZONE}
              ENABLE_METRICS: 1
              COMMENT_PREF_DEFAULT: 0
              DEBUG: 0
              SQL_DEBUG: 0
              DEBUG_TOOLBAR: 0
              ENABLE_SIGNUP: 0
              FRACTION_PREF_DEFAULT: 0
              GUNICORN_MEDIA: 0
              MAX_OWNED_SPACES_PREF_DEFAULT: 1000
              SHOPPING_MIN_AUTOSYNC_INTERVAL: 5
              TANDOOR_PORT: &port 8888
              ALLOWED_HOSTS: "*"
              SOCIAL_DEFAULT_ACCESS: 1
              SOCIAL_DEFAULT_GROUP: guest
            envFrom:
              - secretRef:
                  name: *app
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /accounts/login/
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /accounts/login/
                    port: *port
                  failureThreshold: 30
                  periodSeconds: 10
            resources:
              requests:
                cpu: 10m
                memory: 500Mi
              limits:
                memory: 750Mi
          nginx:
            image:
              repository: ghcr.io/nginxinc/nginx-unprivileged
              tag: 1.27.4-alpine
    defaultPodOptions:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/arch
                    operator: In
                    values:
                      - amd64

    service:
      app:
        controller: *app
        ports:
          http:
            port: 8080
    ingress:
      app:
        enabled: true
        className: ${INGRESSCLASS}
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/name: Tandoor
          gethomepage.dev/description: Managing recipes, planned meals, shopping lists.
          gethomepage.dev/group: Home
          gethomepage.dev/icon: tandoor-recipes.png
          gethomepage.dev/pod-selector: >-
            app.kubernetes.io/name in (tandoor)
          gethomepage.dev/href: https://home-recipes.${SECRET_DOMAIN}
          #gethomepage.dev/widget.type: tandoor
          #gethomepage.dev/widget.url: http://tandoor.self-hosted:8080
          #gethomepage.dev/widget.key: "{{ `{{HOMEPAGE_VAR_TANDOOR_API_KEY}}` }}"
        hosts:
          - host: &host "home-recipes.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host


    persistence:
      files:
        existingClaim: *app
        advancedMounts:
          tandoor:
            app:
              - path: /opt/recipes/mediafiles
                subPath: mediafiles
              - path: /opt/recipes/staticfiles
                subPath: staticfiles
            nginx:
              - path: /media
                subPath: mediafiles
              - path: /static
                subPath: staticfiles
      nginx-config:
        type: configMap
        name: tandoor-nginx
        advancedMounts:
          tandoor:
            nginx:
              - path: /etc/nginx/nginx.conf
                subPath: nginx-config
                readOnly: true
      temp:
        type: emptyDir
        advancedMounts:
          tandoor:
            app:
              - path: /tmp
                subPath: app-tmp
              - path: /opt/recipes/cookbook/static/django_js_reverse
                subPath: django_js_reverse
