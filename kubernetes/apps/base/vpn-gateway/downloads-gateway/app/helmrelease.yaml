---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app downloads-gateway
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    defaultPodOptions:
      # -- Defines affinity constraint rules. Helm templates can be used.
      # [[ref]](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity)
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "topology.kubernetes.io/zone"
                operator: In
                values:
                - "vm"
      # -- Specify taint tolerations
      # [[ref]](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/)
      tolerations:
        - key: "homelab.k8s.io/type"
          operator: "Equal"
          value: "vm"
          effect: "NoExecute"
    controllers:
      downloads-gateway:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          routes:
            image:
              repository: ghcr.io/angelnu/pod-gateway
              tag: v1.13.0
            command:
              - /bin/gateway_init.sh
            securityContext:
              privileged: true
        containers:
          gateway:
            image:
              repository: ghcr.io/angelnu/pod-gateway
              tag: v1.13.0
            command:
              - /bin/gateway_sidecar.sh
            securityContext:
              capabilities:
                add: [ "NET_RAW", "NET_ADMIN" ]
            #ports:
            #  - name: vxlan
            #    containerPort: 4789
            #    protocol: UDP
          netshoot:
            image:
              repository: ghcr.io/nicolaka/netshoot
              tag: v0.14
            command:
              - /bin/sh
              - -c
              - sleep infinity
            resources:
              requests:
                cpu: 10m
                memory: 10M
              limits:
                memory: 50M
            securityContext:
              capabilities:
                add:
                  - NET_ADMIN
          gluetun:
            image:
              repository: ghcr.io/qdm12/gluetun
              tag: v3.40.0@sha256:2b42bfa046757145a5155acece417b65b4443c8033fb88661a8e9dcf7fda5a00
            env:
              TZ: ${CLUSTER_TIMEZONE}
              VPN_TYPE: wireguard
              VPN_INTERFACE: wg0
              FIREWALL_ENABLED_DISABLING_IT_SHOOTS_YOU_IN_YOUR_FOOT: "off"
              DOT: "off"
              DOT_IPV6: "off"
              FIREWALL_VPN_INPUT_PORTS: "51820,55633"
              WIREGUARD_MTU: 1320
              # HEALTH_TARGET_ADDRESS: "1.1.1.1"
              # HEALTH_VPN_DURATION_INITIAL: 30s
              # HEALTH_SUCCESS_WAIT_DURATION: 40s
              DNS_ADDRESS: ${SVC_KUBE_DNS_V4}
            envFrom:
              - secretRef:
                  name: *app
            resources:
              requests:
                cpu: 15m
                memory: 64Mi
              limits:
                #kernel.org/tun: 1
                memory: 128Mi
            securityContext:
              capabilities:
                add: [ "NET_ADMIN" ]
        #pod:
        #  dnsPolicy: None
        #  dnsConfig:
        #    nameservers:
        #      - 10.43.0.10
        #    searches: ["default.svc.cluster.local", "svc.cluster.local", "cluster.local"]
        #    options:
        #      - name: ndots
        #        value: "5"
      #pod-gateway-webhook:
      #  annotations:
      #    reloader.stakater.com/auto: "true"
      #  containers:
      #    webhook:
      #      image:
      #        repository: ghcr.io/angelnu/gateway-admision-controller
      #        tag: v3.12.0
      #      args:
      #        - --webhook-listen-address=:8080
      #        - --gateway=downloads-gateway-pod-gateway.vpn.svc.cluster.local
      #        - --DNS=172.16.0.1
      #        - --configmapName=downloads-gateway-pod-gateway
      #        - --setGatewayLabel=setGateway
      #        - --setGatewayAnnotation=setGateway
      #        - --setGatewayDefault
      #        # Static
      #        - --tls-cert-file-path=/tls/tls.crt
      #        - --tls-key-file-path=/tls/tls.key
      #        - --DNSPolicy=None
      #        # Init container
      #        - --initImage=ghcr.io/angelnu/pod-gateway:v1.12.0
      #        - --initImagePullPol=IfNotPresent
      #        - --initCmd=/bin/client_init.sh
      #        - --initMountPoint=/config
      #        # Sidecar container
      #        - --sidecarImage=ghcr.io/angelnu/pod-gateway:v1.12.0
      #        - --sidecarImagePullPol=IfNotPresent
      #        - --sidecarCmd=/bin/client_sidecar.sh
      #        - --sidecarMountPoint=/config
      #      ports:
      #        - name: http
      #          containerPort: 8080
      #          protocol: TCP
      #      probes:
      #        readiness: &probe
      #          enabled: true
      #          custom: true
      #          spec:
      #            httpGet:
      #              path: /wh/health
      #              port: 8080
      #              scheme: HTTPS
      #            initialDelaySeconds: 1
      #            timeoutSeconds: 10
      #            periodSeconds: 10
      #            successThreshold: 1
      #            failureThreshold: 5
      #        liveness: *probe
      #        startup:
      #          enabled: true
      #          custom: true
      #          spec:
      #            httpGet:
      #              path: /wh/health
      #              port: 8080
      #              scheme: HTTPS
      #            timeoutSeconds: 1
      #            periodSeconds: 1
      #            successThreshold: 1
      #            failureThreshold: 30
    service:
      app:
        controller: *app
        type: ClusterIP
        clusterIP: None
        ports:
          vxlan:
            protocol: UDP
            port: 4789
            #targetPort: vxlan
      #pod-gateway-webhook:
      #  controller: pod-gateway-webhook
      #  ports:
      #    http:
      #      protocol: TCP
      #      port: 8080
      #      targetPort: http
    #configMaps:
    #  config:
    #    enabled: true
    #    #annotations:
    #    #  reflector.v1.k8s.emberstack.com/reflection-allowed: "true"
    #    #  reflector.v1.k8s.emberstack.com/reflection-auto-enabled: "true"
    #    #  reflector.v1.k8s.emberstack.com/reflection-auto-namespaces: "media"
    #    data:
    #      nat.conf: |
    #       # Placeholder
    #      nat6.conf: |
    #       # Placeholder
    #      settings.sh: |
    #        #!/bin/sh
    #        DNS_LOCAL_CIDRS="local cluster.local ${DOMAIN} ${SECRET_MAIN_DOMAIN_NAME}"
    #        IPV4_ENABLED="true"
    #        IPV6_ENABLED="false"
    #        NOT_ROUTED_TO_GATEWAY_CIDRS="${NETWORK_K8S_CLUSTER_CIDR} ${NETWORK_K8S_SERVICE_CIDR}"
    #        VPN_BLOCK_OTHER_TRAFFIC="false"
    #        VPN_INTERFACE="wg0"
    #        VPN_LOCAL_CIDRS="${NETWORK_K8S_CLUSTER_CIDR} ${NETWORK_K8S_SERVICE_CIDR} ${LOCAL_CIDR_1}"
    #        VPN_TRAFFIC_PORT="51820"
    #        VXLAN_GATEWAY_FIRST_DYNAMIC_IP="20"
    #        VXLAN_ID="44"
    #        VXLAN_IP_NETWORK="172.16.1"
    #        VXLAN_PORT="4789"
    persistence:
      config:
        type: configMap
        name: *app
        advancedMounts:
          downloads-gateway:
            routes:
              - path: /config
                readOnly: true
            gateway:
              - path: /config
                readOnly: true
