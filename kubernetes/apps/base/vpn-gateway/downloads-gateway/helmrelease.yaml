---
# yaml-language-server: $schema=https://kube-schemas.pages.dev/source.toolkit.fluxcd.io/helmrepository_v1beta2.json
apiVersion: source.toolkit.fluxcd.io/v1
kind: HelmRepository
metadata:
  name: angelnu-helm-charts
spec:
  interval: 2h
  url: https://angelnu.github.io/helm-charts
  timeout: 15m
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app downloads-gateway
spec:
  interval: 1h
  chart:
    spec:
      # renovate: registryUrl=https://angelnu.github.io/helm-charts/
      chart: pod-gateway
      version: 6.5.1
      sourceRef:
        kind: HelmRepository
        name: angelnu-helm-charts
  maxHistory: 3
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    image:
      repository: ghcr.io/angelnu/pod-gateway
      tag: v1.13.0@sha256:a5b032e15f7570493977b330a5a86dcffebb807d35685ad803e47afb62d105f2
      #tag: v1.11.1@sha256:0617304f085bc98529f0c5cd0c40c63bb019380a026a277c812bd13f78b4bc5d
    env:
      TZ: "${CLUSTER_TIMEZONE}"
    routed_namespaces:
      - download
      - vpn
    tolerations:
     - key: "homelab.k8s.io/type"
       operator: "Equal"
       value: "vm"
       effect: "NoExecute"
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: "topology.kubernetes.io/zone"
              operator: In
              values:
              - "vm"
    # Default VPN_VXLAN DNS
    DNS: 172.16.0.1
    #service:
    #  vpn:
    #    enabled: true
    #    #type: LoadBalancer
    #    #annotations:
    #    #  io.cilium/lb-ipam-ips: ${SECRET_LB_VPN_DOWNLOADS_SERVICE}
    #    #externalTrafficPolicy: Cluster
    #    ##externalTrafficPolicy: Local
    #    ports:
    #      shadowsocks:
    #        enabled: true
    #        port: 8388
    podAnnotations:
      configmap.reloader.stakater.com/reload: downloads-gateway-pod-gateway
      secret.reloader.stakater.com/reload: *app
    addons:
      netshoot:
        enabled: true
      vpn:
        enabled: true
        type: gluetun
        gluetun:
          image:
            repository: ghcr.io/qdm12/gluetun
            tag: v3.40.0@sha256:2b42bfa046757145a5155acece417b65b4443c8033fb88661a8e9dcf7fda5a00
            #tag: v3.39.1@sha256:6a8058e626763cbf735ac2f78c774dbb24fec2490bd9d9f7d67e22592cb4a991
        env:
          - name: VPN_TYPE
            value: wireguard
          - name: VPN_INTERFACE
            value: &if wg0
          - name: DOT
            value: "off"
          #- name: DOT_IPV6
          #  value: "off"
          - name: FIREWALL_ENABLED_DISABLING_IT_SHOOTS_YOU_IN_YOUR_FOOT
          #- name: FIREWALL
            value: "off"
          - name: HEALTH_TARGET_ADDRESS
            value: "1.1.1.1"
          - name: HEALTH_VPN_DURATION_INITIAL
            value: 30s
          - name: HEALTH_SUCCESS_WAIT_DURATION
            value: 40s
          - name: DNS_ADDRESS
            value: ${SVC_KUBE_DNS_V4}
          - name: HTTP_CONTROL_SERVER_ADDRESS
            value: ":80"
          - name: HTTP_CONTROL_SERVER_LOG
            value: "off"
          #- name: SHADOWSOCKS
          #  value: "on"
        envFrom:
          - secretRef:
              name: *app
        securityContext:
          #privileged: true
          capabilities:
            add:
              - NET_ADMIN
        networkPolicy:
          enabled: false
          #policyTypes:
          #  - Ingress
          #  - Egress

          egress:
            - to:
                - ipBlock:
                    cidr: 0.0.0.0/0
              ports:
                - port: &port 51820
                  protocol: UDP
                - port: *port
                  protocol: TCP
                - port: 53
                  protocol: UDP
            - to:
                # Allow traffic within K8S - change if your K8S cluster uses a different CIDR
                - ipBlock:
                    cidr: ${NETWORK_K8S_CLUSTER_CIDR}
                - ipBlock:
                    cidr: ${NETWORK_K8S_SERVICE_CIDR}
                - namespaceSelector: {}    # any namespace
          # Allow incoming ICMP (and all other protocols) from pod-network
          #ingress:
          #  - from:
          #      - ipBlock:
          #          cidr: 10.42.0.0/16
          #      - ipBlock:
          #          cidr: 10.43.0.0/16
          #      - namespaceSelector: {}    # any namespace
          #    # <-- no ports: allow all protocols, so echo replies pass back

    settings:
      IPV4_ENABLED: "true"
      IPV6_ENABLED: "false"
      VPN_INTERFACE: *if
      # If VPN_BLOCK_OTHER_TRAFFIC is true, allow VPN traffic over this port
      VPN_TRAFFIC_PORT: *port
      # Prevent non VPN traffic to leave the gateway
      #VPN_BLOCK_OTHER_TRAFFIC: "true"
      VPN_BLOCK_OTHER_TRAFFIC: "false"
      #VPN_BLOCK_OTHER_TRAFFIC: false
      # Traffic to these IPs will be send through the K8S gateway
      # default: "10.0.0.0/8 192.168.0.0/16"
      #VPN_LOCAL_CIDRS: 10.0.0.0/8 172.22.0.0/15 192.168.0.0/16
      #VPN_LOCAL_CIDRS: "10.42.0.0/16 10.43.0.0/16"
      #VPN_LOCAL_CIDRS: "10.42.0.0/16 10.43.0.0/16 192.168.0.0/16"
      # -- Traffic to these IPs will be send through the K8S gateway
      #VPN_LOCAL_CIDRS: "10.0.0.0/8 192.168.0.0/16"

      VPN_LOCAL_CIDRS: "172.16.0.0/24 ${NETWORK_K8S_CLUSTER_CIDR} ${NETWORK_K8S_SERVICE_CIDR} ${LOCAL_CIDR_1}"
      # IPs not sent to the POD gateway but to the default K8S.
      # Multiple CIDRs can be specified using blanks as separator.
      # Example for Calico: ""172.22.0.0/16 172.24.0.0/16"
      # This is needed, for example, in case your CNI does not add a non-default rule for the K8S addresses (Flannel does).
      #NOT_ROUTED_TO_GATEWAY_CIDRS: 10.0.0.0/8 172.22.0.0/15 192.168.0.0/16
      #NOT_ROUTED_TO_GATEWAY_CIDRS: "10.42.0.0/16 10.43.0.0/16"
      #NOT_ROUTED_TO_GATEWAY_CIDRS: "10.42.0.0/16 10.43.0.0/16 192.168.0.0/16"
      NOT_ROUTED_TO_GATEWAY_CIDRS: "${NETWORK_K8S_CLUSTER_CIDR} ${NETWORK_K8S_SERVICE_CIDR}"
      # -- IPs not sent to the POD gateway but to the default K8S.
      #NOT_ROUTED_TO_GATEWAY_CIDRS: 172.22.0.0/16 172.24.0.0/16
      #NOT_ROUTED_TO_GATEWAY_CIDRS: 10.0.0.0/8 192.168.0.0/16
      # DNS queries to these domains will be resolved by K8S DNS instead of the default (typcally the VPN client changes it)
      DNS_LOCAL_CIDRS: "local cluster.local ${DOMAIN} ${SECRET_MAIN_DOMAIN_NAME}"
      #DNS_LOCAL_CIDRS: "10.0.0.0/8 192.168.0.0/16"
      # DNS_LOCAL_CIDRS: "local"
      #IPTABLES_NFT: "no"
      #IPTABLES_NFT: "yes"
      # Vxlan ID to use
      #VXLAN_ID: 43
      # VXLAN needs an /24 IP range not conflicting with K8S and local IP ranges
      #VXLAN_IP_NETWORK: "172.16.0"
      # -- Keep a range of IPs for static assignment in nat.conf
      #VXLAN_GATEWAY_FIRST_DYNAMIC_IP: 20
      #VXLAN_ID: "44"
      #VXLAN_IP_NETWORK: "172.16.0"
      #VXLAN_PORT: "4789"
      #IPTABLES_NFT: "yes"
    webhook:
      image:
        repository: ghcr.io/angelnu/gateway-admision-controller
        tag: v3.12.0@sha256:6f6ab596afd5fef0ca4648eadfb21cd37ba86fa5afa8b85edcc072976a61fbed
        #tag: v3.10.0@sha256:a8ed630613de277244dfe203cd11d05905d7eeba8d8c41e399b02ee9a847b2f5
      gatewayAnnotation: setDownloadGateway
      # -- boolean: Default behaviour for new PODs in the evaluated namespace
      # if true then the gatewayLabel and gatewayAnnotation below will not be utilized and the
      # gateway will be injected into every pod in the routed_namespaces
      gatewayDefault: false
      gatewayLabel: setDownloadGateway
      namespaceSelector:
        label: downloads-routed-gateway
      #podAnnotations:
      #  configmap.reloader.stakater.com/reload: downloads-gateway-pod-gateway,downloads-gateway-pod-gateway-addon-vpn
      #  secret.reloader.stakater.com/reload: *app
  postRenderers:
    - kustomize:
        patches:
          - target:
              kind: Service
              name: *app
            patch: |
              - op: add
                path: /spec/ports/-
                value:
                  name: gluetun
                  port: 80
                  protocol: TCP
                  targetPort: 80
          - target:
              kind: Deployment
              name: *app
            patch: |
              - op: add
                path: /spec/template/spec/containers/1/ports
                value: []
          - target:
              kind: Deployment
              name: *app
            patch: |
              - op: add
                path: /spec/template/spec/containers/1/ports/-
                value:
                  containerPort: 80
                  name: gluetun
                  protocol: TCP
