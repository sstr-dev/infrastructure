---
# yaml-language-server: $schema=https://kube-schemas.pages.dev/kustomize.toolkit.fluxcd.io/kustomization_v1.json
apiVersion: kustomize.toolkit.fluxcd.io/v1
kind: Kustomization
metadata:
  name: &app dragonfly-searxng
  namespace: &namespace llm
spec:
  commonMetadata:
    labels:
      app.kubernetes.io/name: *app
  interval: 1h
  retryInterval: 2m
  path: ./kubernetes/apps/base/database/dragonfly/cluster
  prune: true
  sourceRef:
    kind: GitRepository
    name: flux-system
    namespace: flux-system
  targetNamespace: *namespace
  timeout: 5m
  dependsOn:
    - name: dragonfly
      namespace: database
  postBuild:
    substitute:
      APP: searxng
      DRAGONFLY_REQUESTS_MEMORY: 256Mi
  components:
    - ../../../../../components/dragonfly
  healthChecks:
    - apiVersion: &dragonflyVersion dragonflydb.io/v1alpha1
      kind: &dragonflyKind Dragonfly
      name: *app
      namespace: *namespace
  healthCheckExprs:
    - apiVersion: *dragonflyVersion
      kind: *dragonflyKind
      failed: status.phase != 'Ready'
      current: status.phase == 'Ready'
---
# yaml-language-server: $schema=https://kube-schemas.pages.dev/kustomize.toolkit.fluxcd.io/kustomization_v1.json
apiVersion: kustomize.toolkit.fluxcd.io/v1
kind: Kustomization
metadata:
  name: &app searxng
  namespace: &namespace llm
spec:
  commonMetadata:
    labels:
      app.kubernetes.io/name: *app
  interval: 1h
  retryInterval: 2m
  path: ./kubernetes/apps/base/llm/searxng
  prune: true
  sourceRef:
    kind: GitRepository
    name: flux-system
    namespace: flux-system
  targetNamespace: *namespace
  timeout: 5m
  wait: false
  dependsOn:
    - name: external-secrets
      namespace: security
    - name: dragonfly-searxng
      namespace: *namespace
  postBuild:
    substitute:
      APP: *app
      DRAGONFLY_REQUESTS_MEMORY: 256Mi
    substituteFrom:
      - kind: ConfigMap
        name: cluster-settings
      - kind: Secret
        name: cluster-secrets

  #components:
  #  - ../../../../../components/dragonfly
  #healthCheckExprs:
  #  - apiVersion: dragonflydb.io/v1alpha1
  #    kind: Dragonfly
  #    failed: status.phase != 'ready'
  #    current: status.phase == 'ready'

